{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Domingo\\\\Desktop\\\\Git Projects\\\\test\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Domingo\\\\Desktop\\\\Git Projects\\\\test\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Domingo\\\\Desktop\\\\Git Projects\\\\test\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Domingo\\\\Desktop\\\\Git Projects\\\\test\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Domingo\\\\Desktop\\\\Git Projects\\\\test\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Domingo\\\\Desktop\\\\Git Projects\\\\test\\\\frontend\\\\src\\\\pages\\\\Stable\\\\SearchStable.js\";\nimport React, { Component } from \"react\";\nimport Spinner from \"../../components/Spinner/Spinner\";\nimport { Dropdown } from 'primereact/dropdown';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport AuthContext from \"../../context/auth-context\"; //import \"../pages/Horses.css\";\n\nvar StablesPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(StablesPage, _Component);\n\n  function StablesPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, StablesPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(StablesPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.componentDidMount = function () {\n      _this.fetchStables();\n    };\n\n    _this.state = {\n      creating: false,\n      stables: [],\n      isLoading: false,\n      selectedStable: null,\n      horses: null\n    };\n    _this.isActive = true;\n\n    _this.onStableChangeHandler = function (e) {\n      _this.setState({\n        selectedStable: e.target.value,\n        horses: null\n      });\n\n      _this.setState({\n        isLoading: true\n      });\n\n      var requestBody = {\n        query: \"\\n        query SingleStable($name: String!) {\\n          singleStable(name: $name) {\\n            _id\\n            name\\n            horses{\\n              name\\n            }\\n          }\\n        }        \\n      \",\n        variables: {\n          name: e.target.value.name\n        }\n      };\n      fetch(\"http://localhost:3000/graphql\", {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(function (result) {\n        if (result.status !== 200 && result.status !== 201) {\n          throw new Error(\"Failed\");\n        }\n\n        return result.json();\n      }).then(function (resData) {\n        _this.setState({\n          horses: resData.data.singleStable.horses,\n          isLoading: false\n        });\n      }).catch(function (error) {\n        console.log(error);\n\n        _this.setState({\n          isLoading: false\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(StablesPage, [{\n    key: \"fetchStables\",\n    value: function fetchStables() {\n      var _this2 = this;\n\n      this.setState({\n        isLoading: true\n      });\n      var requestBody = {\n        query: \"\\n        query {\\n          stables {\\n            _id\\n            name\\n          }\\n        }\\n      \"\n      };\n      fetch(\"http://localhost:3000/graphql\", {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(function (result) {\n        if (result.status !== 200 && result.status !== 201) {\n          throw new Error(\"Failed\");\n        }\n\n        return result.json();\n      }).then(function (resData) {\n        if (_this2.isActive) {\n          _this2.setState({\n            stables: resData.data.stables,\n            isLoading: false\n          });\n        }\n      }).catch(function (error) {\n        console.log(error);\n\n        _this2.setState({\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-3 mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"stable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Select Stable\"), React.createElement(Dropdown, {\n        id: \"stable\",\n        optionLabel: \"name\",\n        filter: true,\n        value: this.state.selectedStable,\n        options: this.state.stables,\n        onChange: this.onStableChangeHandler,\n        placeholder: \"Select a Stable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      })), this.state.horses && React.createElement(DataTable, {\n        value: this.state.horses,\n        paginator: true,\n        rows: 15,\n        first: this.state.first,\n        onPage: function onPage(e) {\n          return _this3.setState({\n            first: e.first\n          });\n        },\n        totalRecords: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(Column, {\n        field: \"name\",\n        header: \"Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      })), this.state.isLoading && React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return StablesPage;\n}(Component);\n\nStablesPage.contextType = AuthContext;\nexport default StablesPage;","map":{"version":3,"sources":["C:\\Users\\Domingo\\Desktop\\Git Projects\\test\\frontend\\src\\pages\\Stable\\SearchStable.js"],"names":["React","Component","Spinner","Dropdown","DataTable","Column","AuthContext","StablesPage","componentDidMount","fetchStables","state","creating","stables","isLoading","selectedStable","horses","isActive","onStableChangeHandler","e","setState","target","value","requestBody","query","variables","name","fetch","method","body","JSON","stringify","headers","then","result","status","Error","json","resData","data","singleStable","catch","error","console","log","first","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport Spinner from \"../../components/Spinner/Spinner\";\r\n\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\n\r\nimport AuthContext from \"../../context/auth-context\";\r\n\r\n//import \"../pages/Horses.css\";\r\n\r\nclass StablesPage extends Component {\r\n  static contextType = AuthContext\r\n\r\n  componentDidMount = () => {\r\n    this.fetchStables()\r\n  }\r\n\r\n  state = {\r\n    creating: false,\r\n    stables: [],\r\n    isLoading: false,\r\n    selectedStable: null,\r\n    horses: null\r\n  }\r\n  isActive = true;\r\n\r\n  fetchStables() {\r\n    this.setState({ isLoading: true })\r\n    const requestBody = {\r\n      query: `\r\n        query {\r\n          stables {\r\n            _id\r\n            name\r\n          }\r\n        }\r\n      `\r\n    }\r\n\r\n    fetch(\"http://localhost:3000/graphql\", {\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n      .then(result => {\r\n        if (result.status !== 200 && result.status !== 201) {\r\n          throw new Error(\"Failed\")\r\n        }\r\n        return result.json()\r\n      })\r\n      .then(resData => {\r\n        if (this.isActive) {\r\n          this.setState({ stables: resData.data.stables, isLoading: false });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n        this.setState({ isLoading: false });\r\n      })\r\n  }\r\n\r\n  onStableChangeHandler = (e) => {\r\n    this.setState({ selectedStable: e.target.value, horses: null });\r\n    \r\n    this.setState({ isLoading: true })\r\n    const requestBody = {\r\n      query: `\r\n        query SingleStable($name: String!) {\r\n          singleStable(name: $name) {\r\n            _id\r\n            name\r\n            horses{\r\n              name\r\n            }\r\n          }\r\n        }        \r\n      `,\r\n      variables: {\r\n        name: e.target.value.name\r\n      }\r\n    }\r\n\r\n    fetch(\"http://localhost:3000/graphql\", {\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n      .then(result => {\r\n        if (result.status !== 200 && result.status !== 201) {\r\n          throw new Error(\"Failed\")\r\n        }\r\n        return result.json()\r\n      })\r\n      .then(resData => {\r\n        this.setState({ horses: resData.data.singleStable.horses, isLoading: false });\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n        this.setState({ isLoading: false });\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"col-md-3 mb-3\">\r\n          <label htmlFor=\"stable\">Select Stable</label>\r\n          <Dropdown id=\"stable\" optionLabel=\"name\" filter={true} value={this.state.selectedStable} options={this.state.stables} onChange={this.onStableChangeHandler} placeholder=\"Select a Stable\" />\r\n        </div>\r\n        {\r\n          this.state.horses &&\r\n          <DataTable value={this.state.horses} paginator={true} rows={15} first={this.state.first} onPage={(e) => this.setState({ first: e.first })}\r\n            totalRecords={10}>\r\n            <Column field=\"name\" header=\"Name\" />\r\n          </DataTable>\r\n        }\r\n\r\n        {\r\n          this.state.isLoading && <Spinner />\r\n        }\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StablesPage\r\n"]},"metadata":{},"sourceType":"module"}