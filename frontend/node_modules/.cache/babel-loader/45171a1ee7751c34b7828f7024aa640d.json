{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Domingo\\\\Desktop\\\\Git Projects\\\\test\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Domingo\\\\Desktop\\\\Git Projects\\\\test\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Domingo\\\\Desktop\\\\Git Projects\\\\test\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Domingo\\\\Desktop\\\\Git Projects\\\\test\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Domingo\\\\Desktop\\\\Git Projects\\\\test\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Domingo\\\\Desktop\\\\Git Projects\\\\test\\\\frontend\\\\src\\\\pages\\\\Horse\\\\SearchHorse.js\";\nimport React, { Component } from \"react\";\nimport Spinner from \"../../components/Spinner/Spinner\";\nimport { Dropdown } from 'primereact/dropdown';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport AuthContext from \"../../context/auth-context\"; //import \"../pages/Horses.css\";\n\nvar SearchHorsePage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SearchHorsePage, _Component);\n\n  function SearchHorsePage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SearchHorsePage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SearchHorsePage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.componentDidMount = function () {\n      _this.fetchHorses();\n    };\n\n    _this.state = {\n      creating: false,\n      isLoading: false,\n      selectedHorse: null,\n      horses: [],\n      horse: null\n    };\n    _this.isActive = true;\n\n    _this.onHorseChangeHandler = function (e) {\n      _this.setState({\n        selectedHorse: e.target.value,\n        horse: null\n      });\n\n      _this.setState({\n        isLoading: true\n      });\n\n      var requestBody = {\n        query: \"\\n        query SingleHorse($name: String!) {\\n          singleHorse(name: $name) {\\n            _id\\n            name\\n            stable {\\n              name              \\n            }\\n          }\\n        }        \\n      \",\n        variables: {\n          name: e.target.value.name\n        }\n      };\n      fetch(\"http://localhost:3000/graphql\", {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(function (result) {\n        if (result.status !== 200 && result.status !== 201) {\n          throw new Error(\"Failed\");\n        }\n\n        return result.json();\n      }).then(function (resData) {\n        _this.setState({\n          horse: [resData.data.singleHorse],\n          isLoading: false\n        });\n      }).catch(function (error) {\n        console.log(error);\n\n        _this.setState({\n          isLoading: false\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SearchHorsePage, [{\n    key: \"fetchHorses\",\n    value: function fetchHorses() {\n      var _this2 = this;\n\n      this.setState({\n        isLoading: true\n      });\n      var requestBody = {\n        query: \"\\n        query {\\n          horses {\\n            _id\\n            name            \\n          }\\n        }\\n      \"\n      };\n      fetch(\"http://localhost:3000/graphql\", {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(function (result) {\n        if (result.status !== 200 && result.status !== 201) {\n          throw new Error(\"Failed\");\n        }\n\n        return result.json();\n      }).then(function (resData) {\n        if (_this2.isActive) {\n          _this2.setState({\n            horses: resData.data.horses,\n            isLoading: false\n          });\n        }\n      }).catch(function (error) {\n        console.log(error);\n\n        _this2.setState({\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-3 mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"horse\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Select a Horse\"), React.createElement(Dropdown, {\n        id: \"horse\",\n        optionLabel: \"name\",\n        filter: true,\n        value: this.state.selectedHorse,\n        options: this.state.horses,\n        onChange: this.onHorseChangeHandler,\n        placeholder: \"Select a Horse\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      })), this.state.horse && React.createElement(DataTable, {\n        value: this.state.horse,\n        paginator: true,\n        rows: 15,\n        first: this.state.first,\n        onPage: function onPage(e) {\n          return _this3.setState({\n            first: e.first\n          });\n        },\n        totalRecords: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Column, {\n        field: \"name\",\n        header: \"Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), React.createElement(Column, {\n        field: \"stable.name\",\n        header: \"Stable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      })), this.state.isLoading && React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return SearchHorsePage;\n}(Component);\n\nSearchHorsePage.contextType = AuthContext;\nexport default SearchHorsePage;","map":{"version":3,"sources":["C:\\Users\\Domingo\\Desktop\\Git Projects\\test\\frontend\\src\\pages\\Horse\\SearchHorse.js"],"names":["React","Component","Spinner","Dropdown","DataTable","Column","AuthContext","SearchHorsePage","componentDidMount","fetchHorses","state","creating","isLoading","selectedHorse","horses","horse","isActive","onHorseChangeHandler","e","setState","target","value","requestBody","query","variables","name","fetch","method","body","JSON","stringify","headers","then","result","status","Error","json","resData","data","singleHorse","catch","error","console","log","first","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport Spinner from \"../../components/Spinner/Spinner\";\r\n\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\n\r\nimport AuthContext from \"../../context/auth-context\";\r\n\r\n//import \"../pages/Horses.css\";\r\n\r\nclass SearchHorsePage extends Component {\r\n  static contextType = AuthContext\r\n\r\n  componentDidMount = () => {\r\n    this.fetchHorses()\r\n  }\r\n\r\n  state = {\r\n    creating: false,    \r\n    isLoading: false,\r\n    selectedHorse: null,\r\n    horses: [],\r\n    horse: null\r\n  }\r\n  isActive = true;\r\n\r\n  fetchHorses() {\r\n    this.setState({ isLoading: true })\r\n    const requestBody = {\r\n      query: `\r\n        query {\r\n          horses {\r\n            _id\r\n            name            \r\n          }\r\n        }\r\n      `\r\n    }\r\n\r\n    fetch(\"http://localhost:3000/graphql\", {\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n      .then(result => {\r\n        if (result.status !== 200 && result.status !== 201) {\r\n          throw new Error(\"Failed\")\r\n        }\r\n        return result.json()\r\n      })\r\n      .then(resData => {\r\n        if (this.isActive) {\r\n          this.setState({ horses: resData.data.horses, isLoading: false });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n        this.setState({ isLoading: false });\r\n      })\r\n  }\r\n\r\n\r\n  onHorseChangeHandler = (e) => {\r\n    this.setState({ selectedHorse: e.target.value, horse: null });\r\n    \r\n    this.setState({ isLoading: true })\r\n    const requestBody = {\r\n      query: `\r\n        query SingleHorse($name: String!) {\r\n          singleHorse(name: $name) {\r\n            _id\r\n            name\r\n            stable {\r\n              name              \r\n            }\r\n          }\r\n        }        \r\n      `,\r\n      variables: {\r\n        name: e.target.value.name\r\n      }\r\n    }\r\n\r\n    fetch(\"http://localhost:3000/graphql\", {\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n      .then(result => {\r\n        if (result.status !== 200 && result.status !== 201) {\r\n          throw new Error(\"Failed\")\r\n        }\r\n        return result.json()\r\n      })\r\n      .then(resData => {\r\n        this.setState({ horse: [resData.data.singleHorse], isLoading: false });\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n        this.setState({ isLoading: false });\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"col-md-3 mb-3\">\r\n          <label htmlFor=\"horse\">Select a Horse</label>\r\n          <Dropdown id=\"horse\" optionLabel=\"name\" filter={true} value={this.state.selectedHorse} options={this.state.horses} onChange={this.onHorseChangeHandler} placeholder=\"Select a Horse\" />\r\n        </div>\r\n        {\r\n          this.state.horse &&\r\n          <DataTable value={this.state.horse} paginator={true} rows={15} first={this.state.first} onPage={(e) => this.setState({ first: e.first })}\r\n            totalRecords={10}>\r\n            <Column field=\"name\" header=\"Name\" />\r\n            <Column field=\"stable.name\" header=\"Stable\" />\r\n          </DataTable>\r\n        }\r\n\r\n        {\r\n          this.state.isLoading && <Spinner />\r\n        }\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchHorsePage\r\n"]},"metadata":{},"sourceType":"module"}