{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Domingo\\\\Desktop\\\\Git Projects\\\\test\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Domingo\\\\Desktop\\\\Git Projects\\\\test\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Domingo\\\\Desktop\\\\Git Projects\\\\test\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Domingo\\\\Desktop\\\\Git Projects\\\\test\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Domingo\\\\Desktop\\\\Git Projects\\\\test\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Domingo\\\\Desktop\\\\Git Projects\\\\test\\\\frontend\\\\src\\\\pages\\\\Jockey\\\\Jockey.js\";\nimport React, { Component } from \"react\";\nimport Spinner from \"../../components/Spinner/Spinner\";\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport AuthContext from \"../../context/auth-context\"; //import \"../pages/Horses.css\";\n\nvar JockeysPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(JockeysPage, _Component);\n\n  function JockeysPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, JockeysPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(JockeysPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.componentDidMount = function () {\n      _this.fetchJockeys();\n    };\n\n    _this.state = {\n      creating: false,\n      jockeys: [],\n      isLoading: false,\n      jockey: {\n        name: ''\n      }\n    };\n    _this.isActive = true;\n    return _this;\n  }\n\n  _createClass(JockeysPage, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.isActive = false;\n    }\n  }, {\n    key: \"fetchJockeys\",\n    value: function fetchJockeys() {\n      var _this2 = this;\n\n      this.setState({\n        isLoading: true\n      });\n      var requestBody = {\n        query: \"\\n        query {\\n          jockeys {\\n            _id\\n            name\\n          }\\n        }\\n      \"\n      };\n      fetch(\"http://localhost:3000/graphql\", {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(function (result) {\n        if (result.status !== 200 && result.status !== 201) {\n          throw new Error(\"Failed\");\n        }\n\n        return result.json();\n      }).then(function (resData) {\n        if (_this2.isActive) {\n          _this2.setState({\n            jockeys: resData.data.jockeys,\n            isLoading: false\n          });\n        }\n      }).catch(function (error) {\n        console.log(error);\n\n        _this2.setState({\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(DataTable, {\n        value: this.state.jockeys,\n        paginator: true,\n        rows: 15,\n        first: this.state.first,\n        onPage: function onPage(e) {\n          return _this3.setState({\n            first: e.first\n          });\n        },\n        totalRecords: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Column, {\n        field: \"name\",\n        header: \"Name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      })), this.state.isLoading && React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return JockeysPage;\n}(Component);\n\nJockeysPage.contextType = AuthContext;\nexport default JockeysPage;","map":{"version":3,"sources":["C:\\Users\\Domingo\\Desktop\\Git Projects\\test\\frontend\\src\\pages\\Jockey\\Jockey.js"],"names":["React","Component","Spinner","DataTable","Column","AuthContext","JockeysPage","componentDidMount","fetchJockeys","state","creating","jockeys","isLoading","jockey","name","isActive","setState","requestBody","query","fetch","method","body","JSON","stringify","headers","then","result","status","Error","json","resData","data","catch","error","console","log","first","e","contextType"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,OAAP,MAAoB,kCAApB;AAEA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,MAAT,QAAuB,mBAAvB;AAEA,OAAOC,WAAP,MAAwB,4BAAxB,C,CAEA;;IAEMC,W;;;;;;;;;;;;;;;;;;UAGJC,iB,GAAoB,YAAM;AACxB,YAAKC,YAAL;AACD,K;;UAMDC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE,KADJ;AAENC,MAAAA,OAAO,EAAE,EAFH;AAGNC,MAAAA,SAAS,EAAE,KAHL;AAINC,MAAAA,MAAM,EAAE;AACNC,QAAAA,IAAI,EAAE;AADA;AAJF,K;UAQRC,Q,GAAW,I;;;;;;2CAZY;AACrB,WAAKA,QAAL,GAAgB,KAAhB;AACD;;;mCAYc;AAAA;;AACb,WAAKC,QAAL,CAAc;AAAEJ,QAAAA,SAAS,EAAE;AAAb,OAAd;AACA,UAAMK,WAAW,GAAG;AAClBC,QAAAA,KAAK;AADa,OAApB;AAWAC,MAAAA,KAAK,CAAC,+BAAD,EAAkC;AACrCC,QAAAA,MAAM,EAAE,MAD6B;AAErCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,WAAf,CAF+B;AAGrCO,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAH4B,OAAlC,CAAL,CAOGC,IAPH,CAOQ,UAAAC,MAAM,EAAI;AACd,YAAIA,MAAM,CAACC,MAAP,KAAkB,GAAlB,IAAyBD,MAAM,CAACC,MAAP,KAAkB,GAA/C,EAAoD;AAClD,gBAAM,IAAIC,KAAJ,CAAU,QAAV,CAAN;AACD;;AACD,eAAOF,MAAM,CAACG,IAAP,EAAP;AACD,OAZH,EAaGJ,IAbH,CAaQ,UAAAK,OAAO,EAAI;AACf,YAAI,MAAI,CAACf,QAAT,EAAmB;AACjB,UAAA,MAAI,CAACC,QAAL,CAAc;AAAEL,YAAAA,OAAO,EAAEmB,OAAO,CAACC,IAAR,CAAapB,OAAxB;AAAiCC,YAAAA,SAAS,EAAE;AAA5C,WAAd;AACD;AACF,OAjBH,EAkBGoB,KAlBH,CAkBS,UAAAC,KAAK,EAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;;AACA,QAAA,MAAI,CAACjB,QAAL,CAAc;AAAEJ,UAAAA,SAAS,EAAE;AAAb,SAAd;AACD,OArBH;AAsBD;;;6BAEQ;AAAA;;AACP,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,KAAK,EAAE,KAAKH,KAAL,CAAWE,OAA7B;AAAsC,QAAA,SAAS,EAAE,IAAjD;AAAuD,QAAA,IAAI,EAAE,EAA7D;AAAiE,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAW2B,KAAnF;AAA0F,QAAA,MAAM,EAAE,gBAACC,CAAD;AAAA,iBAAO,MAAI,CAACrB,QAAL,CAAc;AAAEoB,YAAAA,KAAK,EAAEC,CAAC,CAACD;AAAX,WAAd,CAAP;AAAA,SAAlG;AACE,QAAA,YAAY,EAAE,EADhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAqB,QAAA,MAAM,EAAC,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EAMI,KAAK3B,KAAL,CAAWG,SAAX,IAAwB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAN5B,CADF;AAWD;;;;EAtEuBX,S;;AAApBK,W,CACGgC,W,GAAcjC,W;AAwEvB,eAAeC,WAAf","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport Spinner from \"../../components/Spinner/Spinner\";\r\n\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\n\r\nimport AuthContext from \"../../context/auth-context\";\r\n\r\n//import \"../pages/Horses.css\";\r\n\r\nclass JockeysPage extends Component {\r\n  static contextType = AuthContext\r\n\r\n  componentDidMount = () => {\r\n    this.fetchJockeys()\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.isActive = false;\r\n  }\r\n\r\n  state = {\r\n    creating: false,\r\n    jockeys: [],\r\n    isLoading: false,\r\n    jockey: {\r\n      name: ''\r\n    }\r\n  }\r\n  isActive = true;\r\n\r\n  fetchJockeys() {\r\n    this.setState({ isLoading: true })\r\n    const requestBody = {\r\n      query: `\r\n        query {\r\n          jockeys {\r\n            _id\r\n            name\r\n          }\r\n        }\r\n      `\r\n    }\r\n\r\n    fetch(\"http://localhost:3000/graphql\", {\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n      .then(result => {\r\n        if (result.status !== 200 && result.status !== 201) {\r\n          throw new Error(\"Failed\")\r\n        }\r\n        return result.json()\r\n      })\r\n      .then(resData => {\r\n        if (this.isActive) {\r\n          this.setState({ jockeys: resData.data.jockeys, isLoading: false });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n        this.setState({ isLoading: false });\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <DataTable value={this.state.jockeys} paginator={true} rows={15} first={this.state.first} onPage={(e) => this.setState({ first: e.first })}\r\n          totalRecords={10}>\r\n          <Column field=\"name\" header=\"Name\" />\r\n        </DataTable>\r\n        {\r\n          this.state.isLoading && <Spinner />\r\n        }\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default JockeysPage\r\n"]},"metadata":{},"sourceType":"module"}