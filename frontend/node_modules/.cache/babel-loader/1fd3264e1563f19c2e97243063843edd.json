{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Domingo\\\\Desktop\\\\Git Projects\\\\test\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Domingo\\\\Desktop\\\\Git Projects\\\\test\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Domingo\\\\Desktop\\\\Git Projects\\\\test\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Domingo\\\\Desktop\\\\Git Projects\\\\test\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Domingo\\\\Desktop\\\\Git Projects\\\\test\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Domingo\\\\Desktop\\\\Git Projects\\\\test\\\\frontend\\\\src\\\\pages\\\\Program\\\\CreateProgram.js\";\nimport React, { Component } from \"react\";\nimport TextField from '@material-ui/core/TextField';\nimport AuthContext from \"../../context/auth-context\"; //import Backdrop from \"../components/Backdrop/Backdrop\";\n//import TestModal from \"../components/Modal/Modal\";\n//import Modal from \"react-bootstrap-modal\";\n\nimport { Dialog } from 'primereact/dialog';\nimport Spinner from \"../../components/Spinner/Spinner\";\nimport { Calendar } from 'primereact/calendar'; //import ModalHeader from \"react-bootstrap/ModalHeader\";\n//import { InputText } from 'primereact/inputtext';\n//import { Dropdown } from 'primereact/dropdown';\n\nvar CreateProgramPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateProgramPage, _Component);\n\n  function CreateProgramPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CreateProgramPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CreateProgramPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      creating: false,\n      isLoading: false,\n      exist: false,\n      visible: false,\n      created: false,\n      program: {\n        number: \"\",\n        date: null\n      }\n    };\n    _this.isActive = true;\n\n    _this.startCreateProgram = function () {\n      _this.setState({\n        exist: true\n      });\n    };\n\n    _this.modalCancelHandler = function (event) {\n      _this.setState({\n        creating: false,\n        exist: false,\n        created: false\n      });\n\n      _this.setState({\n        program: {\n          number: \"\",\n          date: \"\"\n        }\n      });\n\n      document.getElementById(\"number\").focus();\n    };\n\n    _this.onNumberChangeHandler = function (e) {\n      var newProgram = Object.assign({}, _this.state.program);\n      newProgram[e.target.id] = parseInt(e.target.value);\n\n      _this.setState({\n        program: newProgram\n      });\n    };\n\n    _this.onHandleChange = function (e) {\n      var newProgram = Object.assign({}, _this.state.program);\n      newProgram[e.target.id] = e.target.value;\n\n      _this.setState({\n        program: newProgram\n      });\n    };\n\n    _this.validateProgram = function () {\n      if (!_this.state.program.number) {\n        return false;\n      }\n\n      _this.setState({\n        isLoading: true\n      });\n\n      var requestBody = {\n        query: \"\\n        query SingleProgram($number: Int!) {\\n          singleProgram(programId: $number) {\\n            number                        \\n          }\\n        }\\n      \",\n        variables: {\n          number: _this.state.program.number\n        }\n      };\n      fetch(\"http://localhost:3000/graphql\", {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(function (result) {\n        if (result.status !== 200 && result.status !== 201) {\n          throw new Error(\"Failed\");\n        }\n\n        return result.json();\n      }).then(function (resData) {\n        if (resData && resData.data.singleProgram) {\n          _this.setState({\n            exist: true,\n            isLoading: false\n          });\n        } else {\n          _this.setState({\n            isLoading: false\n          });\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.saveHandler = function (event) {\n      _this.setState({\n        isLoading: true\n      });\n\n      var requestBody = {\n        query: \"\\n        mutation CreateProgram($program: ProgramInput) {\\n          createProgram(programInput: $program) {\\n            _id\\n            number\\n            date            \\n          }\\n        }\\n      \",\n        variables: {\n          program: _this.state.program\n        }\n      };\n      var token = _this.context.token;\n      fetch(\"http://localhost:3000/graphql\", {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          \"Authorization\": \"Bearer \".concat(token),\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(function (result) {\n        if (result.status !== 200 && result.status !== 201) {\n          throw new Error(\"Failed\");\n        }\n\n        return result.json();\n      }).then(function (resData) {\n        _this.setState(function (prevState) {\n          return {\n            isLoading: false\n          };\n        });\n\n        _this.setState({\n          created: true\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CreateProgramPage, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-3 mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"Date\"), React.createElement(Calendar, {\n        dateFormat: \"dd/mm/yy\",\n        id: \"date\",\n        value: this.state.program.date,\n        onChange: this.onHandleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-md-3 mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(TextField, {\n        id: \"number\",\n        label: \"Program\",\n        keyfilter: \"pint\",\n        value: this.state.program.number,\n        margin: \"normal\",\n        variant: \"outlined\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }))), React.createElement(\"button\", {\n        className: \"btn btn-secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(\"button\", {\n        onClick: this.saveHandler,\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, \"Save\"), React.createElement(Dialog, {\n        header: \"Program Exists!\",\n        visible: this.state.exist,\n        style: {\n          width: '50vw'\n        },\n        modal: true,\n        onHide: this.modalCancelHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, this.state.program.number, \" already exists!\"), React.createElement(Dialog, {\n        header: this.state.program.number + \" Created!\",\n        visible: this.state.created,\n        style: {\n          width: '50vw'\n        },\n        modal: true,\n        onHide: this.modalCancelHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"Number: \", this.state.program.number))), this.state.isLoading && React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return CreateProgramPage;\n}(Component);\n\nCreateProgramPage.contextType = AuthContext;\nexport default CreateProgramPage;","map":{"version":3,"sources":["C:\\Users\\Domingo\\Desktop\\Git Projects\\test\\frontend\\src\\pages\\Program\\CreateProgram.js"],"names":["React","Component","TextField","AuthContext","Dialog","Spinner","Calendar","CreateProgramPage","state","creating","isLoading","exist","visible","created","program","number","date","isActive","startCreateProgram","setState","modalCancelHandler","event","document","getElementById","focus","onNumberChangeHandler","e","newProgram","Object","assign","target","id","parseInt","value","onHandleChange","validateProgram","requestBody","query","variables","fetch","method","body","JSON","stringify","headers","then","result","status","Error","json","resData","data","singleProgram","catch","error","console","log","saveHandler","token","context","prevState","width","contextType"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,SAAP,MAAsB,6BAAtB;AAEA,OAAOC,WAAP,MAAwB,4BAAxB,C,CACA;AACA;AACA;;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,SAASC,QAAT,QAAyB,qBAAzB,C,CACA;AAEA;AACA;;IAEMC,iB;;;;;;;;;;;;;;;;;UAGJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE,KADJ;AAENC,MAAAA,SAAS,EAAE,KAFL;AAGNC,MAAAA,KAAK,EAAE,KAHD;AAINC,MAAAA,OAAO,EAAE,KAJH;AAKNC,MAAAA,OAAO,EAAE,KALH;AAMNC,MAAAA,OAAO,EAAE;AACPC,QAAAA,MAAM,EAAE,EADD;AAEPC,QAAAA,IAAI,EAAE;AAFC;AANH,K;UAWRC,Q,GAAW,I;;UAEXC,kB,GAAqB,YAAM;AACzB,YAAKC,QAAL,CAAc;AAAER,QAAAA,KAAK,EAAE;AAAT,OAAd;AACD,K;;UACDS,kB,GAAqB,UAACC,KAAD,EAAW;AAC9B,YAAKF,QAAL,CAAc;AAAEV,QAAAA,QAAQ,EAAE,KAAZ;AAAmBE,QAAAA,KAAK,EAAE,KAA1B;AAAiCE,QAAAA,OAAO,EAAE;AAA1C,OAAd;;AACA,YAAKM,QAAL,CAAc;AACZL,QAAAA,OAAO,EAAE;AACPC,UAAAA,MAAM,EAAE,EADD;AAEPC,UAAAA,IAAI,EAAE;AAFC;AADG,OAAd;;AAMAM,MAAAA,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,KAAlC;AACD,K;;UAEDC,qB,GAAwB,UAACC,CAAD,EAAO;AAC7B,UAAIC,UAAU,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,MAAKrB,KAAL,CAAWM,OAA7B,CAAjB;AACAa,MAAAA,UAAU,CAACD,CAAC,CAACI,MAAF,CAASC,EAAV,CAAV,GAA0BC,QAAQ,CAACN,CAAC,CAACI,MAAF,CAASG,KAAV,CAAlC;;AACA,YAAKd,QAAL,CAAc;AAAEL,QAAAA,OAAO,EAAEa;AAAX,OAAd;AACD,K;;UAEDO,c,GAAiB,UAACR,CAAD,EAAO;AACtB,UAAIC,UAAU,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB,MAAKrB,KAAL,CAAWM,OAA7B,CAAjB;AACAa,MAAAA,UAAU,CAACD,CAAC,CAACI,MAAF,CAASC,EAAV,CAAV,GAA0BL,CAAC,CAACI,MAAF,CAASG,KAAnC;;AACA,YAAKd,QAAL,CAAc;AAAEL,QAAAA,OAAO,EAAEa;AAAX,OAAd;AACD,K;;UAEDQ,e,GAAkB,YAAM;AACtB,UAAI,CAAC,MAAK3B,KAAL,CAAWM,OAAX,CAAmBC,MAAxB,EAAgC;AAC9B,eAAO,KAAP;AACD;;AACD,YAAKI,QAAL,CAAc;AAAET,QAAAA,SAAS,EAAE;AAAb,OAAd;;AACA,UAAM0B,WAAW,GAAG;AAClBC,QAAAA,KAAK,6KADa;AAQlBC,QAAAA,SAAS,EAAE;AACTvB,UAAAA,MAAM,EAAE,MAAKP,KAAL,CAAWM,OAAX,CAAmBC;AADlB;AARO,OAApB;AAYAwB,MAAAA,KAAK,CAAC,+BAAD,EAAkC;AACrCC,QAAAA,MAAM,EAAE,MAD6B;AAErCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,WAAf,CAF+B;AAGrCQ,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAH4B,OAAlC,CAAL,CAOGC,IAPH,CAOQ,UAAAC,MAAM,EAAI;AACd,YAAIA,MAAM,CAACC,MAAP,KAAkB,GAAlB,IAAyBD,MAAM,CAACC,MAAP,KAAkB,GAA/C,EAAoD;AAClD,gBAAM,IAAIC,KAAJ,CAAU,QAAV,CAAN;AACD;;AACD,eAAOF,MAAM,CAACG,IAAP,EAAP;AACD,OAZH,EAaGJ,IAbH,CAaQ,UAAAK,OAAO,EAAI;AACf,YAAIA,OAAO,IAAIA,OAAO,CAACC,IAAR,CAAaC,aAA5B,EAA2C;AACzC,gBAAKjC,QAAL,CAAc;AAAER,YAAAA,KAAK,EAAE,IAAT;AAAeD,YAAAA,SAAS,EAAE;AAA1B,WAAd;AACD,SAFD,MAGK;AACH,gBAAKS,QAAL,CAAc;AAAET,YAAAA,SAAS,EAAE;AAAb,WAAd;AACD;AACF,OApBH,EAqBG2C,KArBH,CAqBS,UAAAC,KAAK,EAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,OAvBH;AAwBD,K;;UAEDG,W,GAAc,UAACpC,KAAD,EAAW;AAEvB,YAAKF,QAAL,CAAc;AAAET,QAAAA,SAAS,EAAE;AAAb,OAAd;;AACA,UAAM0B,WAAW,GAAG;AAClBC,QAAAA,KAAK,oNADa;AAUlBC,QAAAA,SAAS,EAAE;AACTxB,UAAAA,OAAO,EAAE,MAAKN,KAAL,CAAWM;AADX;AAVO,OAApB;AAeA,UAAM4C,KAAK,GAAG,MAAKC,OAAL,CAAaD,KAA3B;AAEAnB,MAAAA,KAAK,CAAC,+BAAD,EAAkC;AACrCC,QAAAA,MAAM,EAAE,MAD6B;AAErCC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,WAAf,CAF+B;AAGrCQ,QAAAA,OAAO,EAAE;AACP,4CAA2Bc,KAA3B,CADO;AAEP,0BAAgB;AAFT;AAH4B,OAAlC,CAAL,CAQGb,IARH,CAQQ,UAAAC,MAAM,EAAI;AACd,YAAIA,MAAM,CAACC,MAAP,KAAkB,GAAlB,IAAyBD,MAAM,CAACC,MAAP,KAAkB,GAA/C,EAAoD;AAClD,gBAAM,IAAIC,KAAJ,CAAU,QAAV,CAAN;AACD;;AACD,eAAOF,MAAM,CAACG,IAAP,EAAP;AACD,OAbH,EAcGJ,IAdH,CAcQ,UAAAK,OAAO,EAAI;AACf,cAAK/B,QAAL,CAAc,UAACyC,SAAD,EAAe;AAC3B,iBAAO;AAAElD,YAAAA,SAAS,EAAE;AAAb,WAAP;AACD,SAFD;;AAGA,cAAKS,QAAL,CAAc;AAAEN,UAAAA,OAAO,EAAE;AAAX,SAAd;AAED,OApBH,EAqBGwC,KArBH,CAqBS,UAAAC,KAAK,EAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,OAvBH;AAwBD,K;;;;;;;6BAEQ;AACP,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,oBAAC,QAAD;AAAU,QAAA,UAAU,EAAC,UAArB;AAAgC,QAAA,EAAE,EAAC,MAAnC;AAA0C,QAAA,KAAK,EAAE,KAAK9C,KAAL,CAAWM,OAAX,CAAmBE,IAApE;AAA0E,QAAA,QAAQ,EAAE,KAAKkB,cAAzF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADF,EAKE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,SAAD;AAAW,QAAA,EAAE,EAAC,QAAd;AACI,QAAA,KAAK,EAAC,SADV;AACoB,QAAA,SAAS,EAAC,MAD9B;AACqC,QAAA,KAAK,EAAE,KAAK1B,KAAL,CAAWM,OAAX,CAAmBC,MAD/D;AACuE,QAAA,MAAM,EAAC,QAD9E;AACuF,QAAA,OAAO,EAAC,UAD/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CALF,CADF,EAWE;AAAQ,QAAA,SAAS,EAAC,mBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXF,EAcE;AAAQ,QAAA,OAAO,EAAE,KAAK0C,WAAtB;AAAmC,QAAA,SAAS,EAAC,iBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdF,EAkBE,oBAAC,MAAD;AAAQ,QAAA,MAAM,EAAC,iBAAf;AAAiC,QAAA,OAAO,EAAE,KAAKjD,KAAL,CAAWG,KAArD;AAA4D,QAAA,KAAK,EAAE;AAAEkD,UAAAA,KAAK,EAAE;AAAT,SAAnE;AAAsF,QAAA,KAAK,EAAE,IAA7F;AAAmG,QAAA,MAAM,EAAE,KAAKzC,kBAAhH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKZ,KAAL,CAAWM,OAAX,CAAmBC,MADtB,qBAlBF,EAsBE,oBAAC,MAAD;AAAQ,QAAA,MAAM,EAAE,KAAKP,KAAL,CAAWM,OAAX,CAAmBC,MAAnB,GAA4B,WAA5C;AAAyD,QAAA,OAAO,EAAE,KAAKP,KAAL,CAAWK,OAA7E;AAAsF,QAAA,KAAK,EAAE;AAAEgD,UAAAA,KAAK,EAAE;AAAT,SAA7F;AAAgH,QAAA,KAAK,EAAE,IAAvH;AAA6H,QAAA,MAAM,EAAE,KAAKzC,kBAA1I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACW,KAAKZ,KAAL,CAAWM,OAAX,CAAmBC,MAD9B,CADF,CADF,CAtBF,EA+BI,KAAKP,KAAL,CAAWE,SAAX,IAAwB,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA/B5B,CADF;AAoCD;;;;EAxK6BT,S;;AAA1BM,iB,CACGuD,W,GAAc3D,W;AA0KvB,eAAeI,iBAAf","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport AuthContext from \"../../context/auth-context\";\r\n//import Backdrop from \"../components/Backdrop/Backdrop\";\r\n//import TestModal from \"../components/Modal/Modal\";\r\n//import Modal from \"react-bootstrap-modal\";\r\nimport { Dialog } from 'primereact/dialog';\r\nimport Spinner from \"../../components/Spinner/Spinner\";\r\nimport { Calendar } from 'primereact/calendar';\r\n//import ModalHeader from \"react-bootstrap/ModalHeader\";\r\n\r\n//import { InputText } from 'primereact/inputtext';\r\n//import { Dropdown } from 'primereact/dropdown';\r\n\r\nclass CreateProgramPage extends Component {\r\n  static contextType = AuthContext\r\n\r\n  state = {\r\n    creating: false,\r\n    isLoading: false,\r\n    exist: false,\r\n    visible: false,\r\n    created: false,\r\n    program: {\r\n      number: \"\",\r\n      date: null\r\n    }\r\n  }\r\n  isActive = true;\r\n\r\n  startCreateProgram = () => {\r\n    this.setState({ exist: true })\r\n  }\r\n  modalCancelHandler = (event) => {\r\n    this.setState({ creating: false, exist: false, created: false })\r\n    this.setState({\r\n      program: {\r\n        number: \"\",\r\n        date: \"\"\r\n      }\r\n    })\r\n    document.getElementById(\"number\").focus();\r\n  }\r\n\r\n  onNumberChangeHandler = (e) => {\r\n    let newProgram = Object.assign({}, this.state.program)\r\n    newProgram[e.target.id] = parseInt(e.target.value)\r\n    this.setState({ program: newProgram })\r\n  }\r\n\r\n  onHandleChange = (e) => {    \r\n    let newProgram = Object.assign({}, this.state.program)\r\n    newProgram[e.target.id] = e.target.value\r\n    this.setState({ program: newProgram });\r\n  }\r\n\r\n  validateProgram = () => {\r\n    if (!this.state.program.number) {\r\n      return false;\r\n    }\r\n    this.setState({ isLoading: true })\r\n    const requestBody = {\r\n      query: `\r\n        query SingleProgram($number: Int!) {\r\n          singleProgram(programId: $number) {\r\n            number                        \r\n          }\r\n        }\r\n      `,\r\n      variables: {\r\n        number: this.state.program.number\r\n      }\r\n    }\r\n    fetch(\"http://localhost:3000/graphql\", {\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n      .then(result => {\r\n        if (result.status !== 200 && result.status !== 201) {\r\n          throw new Error(\"Failed\")\r\n        }\r\n        return result.json()\r\n      })\r\n      .then(resData => {\r\n        if (resData && resData.data.singleProgram) {\r\n          this.setState({ exist: true, isLoading: false })\r\n        }\r\n        else {\r\n          this.setState({ isLoading: false });          \r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  saveHandler = (event) => {\r\n\r\n    this.setState({ isLoading: true })\r\n    const requestBody = {\r\n      query: `\r\n        mutation CreateProgram($program: ProgramInput) {\r\n          createProgram(programInput: $program) {\r\n            _id\r\n            number\r\n            date            \r\n          }\r\n        }\r\n      `,\r\n      variables: {\r\n        program: this.state.program\r\n      }\r\n    }\r\n\r\n    const token = this.context.token\r\n\r\n    fetch(\"http://localhost:3000/graphql\", {\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        \"Authorization\": `Bearer ${token}`,\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n      .then(result => {\r\n        if (result.status !== 200 && result.status !== 201) {\r\n          throw new Error(\"Failed\")\r\n        }\r\n        return result.json()\r\n      })\r\n      .then(resData => {\r\n        this.setState((prevState) => {\r\n          return { isLoading: false }\r\n        })\r\n        this.setState({ created: true })\r\n\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <form>\r\n          <div className=\"col-md-3 mb-3\">\r\n            <label htmlFor=\"date\">Date</label>\r\n            <Calendar dateFormat=\"dd/mm/yy\" id=\"date\" value={this.state.program.date} onChange={this.onHandleChange}></Calendar>\r\n          </div>\r\n          <div className=\"col-md-3 mb-3\">\r\n            <TextField id=\"number\"\r\n                label=\"Program\" keyfilter=\"pint\" value={this.state.program.number} margin=\"normal\" variant=\"outlined\" />\r\n          </div>\r\n        </form>\r\n        <button className=\"btn btn-secondary\">\r\n          Cancel\r\n        </button>\r\n        <button onClick={this.saveHandler} className=\"btn btn-primary\">\r\n          Save\r\n        </button>\r\n\r\n        <Dialog header=\"Program Exists!\" visible={this.state.exist} style={{ width: '50vw' }} modal={true} onHide={this.modalCancelHandler}>\r\n          {this.state.program.number} already exists!\r\n        </Dialog>\r\n\r\n        <Dialog header={this.state.program.number + \" Created!\"} visible={this.state.created} style={{ width: '50vw' }} modal={true} onHide={this.modalCancelHandler}>\r\n          <div>\r\n            <div>\r\n              Number: {this.state.program.number}\r\n            </div>            \r\n          </div>\r\n        </Dialog>\r\n\r\n        {\r\n          this.state.isLoading && <Spinner />\r\n        }\r\n      </React.Fragment >\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateProgramPage\r\n"]},"metadata":{},"sourceType":"module"}