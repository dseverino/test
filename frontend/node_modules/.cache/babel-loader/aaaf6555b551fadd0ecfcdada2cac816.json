{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Domingo\\\\Desktop\\\\Git Projects\\\\test\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Domingo\\\\Desktop\\\\Git Projects\\\\test\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Domingo\\\\Desktop\\\\Git Projects\\\\test\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Domingo\\\\Desktop\\\\Git Projects\\\\test\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Domingo\\\\Desktop\\\\Git Projects\\\\test\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Domingo\\\\Desktop\\\\Git Projects\\\\test\\\\frontend\\\\src\\\\pages\\\\CreateJockey.js\";\nimport React, { Component } from \"react\";\nimport AuthContext from \"../context/auth-context\";\nimport { Dialog } from 'primereact/dialog';\nimport Spinner from \"../components/Spinner/Spinner\"; //import \"../pages/Jockeys.css\";\n\nvar CreateJockeyPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateJockeyPage, _Component);\n\n  function CreateJockeyPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, CreateJockeyPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(CreateJockeyPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      creating: false,\n      Jockeys: [],\n      isLoading: false,\n      exist: false,\n      visible: false,\n      created: false,\n      jockey: {\n        name: \"\"\n      }\n    };\n    _this.isActive = true;\n\n    _this.startCreateJockey = function () {\n      _this.setState({\n        exist: true\n      });\n    };\n\n    _this.modalCancelHandler = function (event) {\n      _this.setState({\n        creating: false,\n        exist: false,\n        created: false\n      });\n\n      _this.setState({\n        jockey: {\n          name: \"\"\n        }\n      });\n\n      document.getElementById(\"name\").focus();\n    };\n\n    _this.onHandleChange = function (e) {\n      var newJockey = Object.assign({}, _this.state.jockey);\n      newJockey[e.target.id] = e.target.value;\n\n      _this.setState({\n        jockey: newJockey\n      });\n    };\n\n    _this.validateJockey = function () {\n      if (!_this.state.jockey.name) {\n        return false;\n      }\n\n      _this.setState({\n        isLoading: true\n      });\n\n      var requestBody = {\n        query: \"\\n        query SingleJockey($name: String!) {\\n          singleJockey(name: $name) {\\n            name\\n          }\\n        }\\n      \",\n        variables: {\n          name: _this.state.jockey.name\n        }\n      };\n      fetch(\"http://localhost:3000/graphql\", {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(function (result) {\n        if (result.status !== 200 && result.status !== 201) {\n          throw new Error(\"Failed\");\n        }\n\n        return result.json();\n      }).then(function (resData) {\n        if (resData && resData.data.singleJockey) {\n          _this.setState({\n            exist: true,\n            isLoading: false\n          });\n        }\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.saveHandler = function (event) {\n      _this.setState({\n        isLoading: true\n      });\n\n      var requestBody = {\n        query: \"\\n        mutation CreateJockey($jockey: JockeyInput) {\\n          createJockey(jockeyInput: $jockey) {\\n            _id\\n            name\\n          }\\n        }\\n      \",\n        variables: {\n          jockey: _this.state.jockey\n        }\n      };\n      var token = _this.context.token;\n      fetch(\"http://localhost:3000/graphql\", {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          \"Authorization\": \"Bearer \".concat(token),\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(function (result) {\n        if (result.status !== 200 && result.status !== 201) {\n          throw new Error(\"Failed\");\n        }\n\n        return result.json();\n      }).then(function (resData) {\n        _this.setState(function (prevState) {\n          return {\n            isLoading: false\n          };\n        });\n\n        _this.setState({\n          created: true\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(CreateJockeyPage, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-3 mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"input\", {\n        type: \"text\",\n        onBlur: this.validateJockey,\n        className: \"form-control\",\n        onChange: this.onHandleChange,\n        id: \"name\",\n        value: this.state.jockey.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }))), React.createElement(\"button\", {\n        className: \"btn btn-secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(\"button\", {\n        onClick: this.saveHandler,\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Save\"), React.createElement(Dialog, {\n        header: \"Jockey Exists!\",\n        visible: this.state.exist,\n        style: {\n          width: '50vw'\n        },\n        modal: true,\n        onHide: this.modalCancelHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, this.state.jockey.name, \" already exists!\"), React.createElement(Dialog, {\n        header: this.state.jockey.name + \" Created!\",\n        visible: this.state.created,\n        style: {\n          width: '50vw'\n        },\n        modal: true,\n        onHide: this.modalCancelHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Name: \", this.state.jockey.name))), this.state.isLoading && React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return CreateJockeyPage;\n}(Component);\n\nCreateJockeyPage.contextType = AuthContext;\nexport default CreateJockeyPage;","map":{"version":3,"sources":["C:\\Users\\Domingo\\Desktop\\Git Projects\\test\\frontend\\src\\pages\\CreateJockey.js"],"names":["React","Component","AuthContext","Dialog","Spinner","CreateJockeyPage","state","creating","Jockeys","isLoading","exist","visible","created","jockey","name","isActive","startCreateJockey","setState","modalCancelHandler","event","document","getElementById","focus","onHandleChange","e","newJockey","Object","assign","target","id","value","validateJockey","requestBody","query","variables","fetch","method","body","JSON","stringify","headers","then","result","status","Error","json","resData","data","singleJockey","catch","error","console","log","saveHandler","token","context","prevState","width","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport AuthContext from \"../context/auth-context\";\r\nimport { Dialog } from 'primereact/dialog';\r\nimport Spinner from \"../components/Spinner/Spinner\";\r\n\r\n//import \"../pages/Jockeys.css\";\r\n\r\nclass CreateJockeyPage extends Component {\r\n  static contextType = AuthContext\r\n\r\n  state = {\r\n    creating: false,\r\n    Jockeys: [],\r\n    isLoading: false,\r\n    exist: false,\r\n    visible: false,\r\n    created: false,\r\n    jockey: {\r\n      name: \"\"\r\n    }\r\n  }\r\n  isActive = true;\r\n\r\n  startCreateJockey = () => {\r\n    this.setState({ exist: true })\r\n  }\r\n  modalCancelHandler = (event) => {\r\n    this.setState({ creating: false, exist: false, created: false })\r\n    this.setState({\r\n      jockey: {\r\n        name: \"\"\r\n      }\r\n    })\r\n    document.getElementById(\"name\").focus();\r\n  }\r\n  onHandleChange = (e) => {\r\n    let newJockey = Object.assign({}, this.state.jockey)\r\n    newJockey[e.target.id] = e.target.value\r\n    this.setState({ jockey: newJockey })\r\n  }\r\n\r\n  validateJockey = () => {\r\n    if (!this.state.jockey.name) {\r\n      return false;\r\n    }\r\n    this.setState({ isLoading: true })\r\n    const requestBody = {\r\n      query: `\r\n        query SingleJockey($name: String!) {\r\n          singleJockey(name: $name) {\r\n            name\r\n          }\r\n        }\r\n      `,\r\n      variables: {\r\n        name: this.state.jockey.name\r\n      }\r\n    }\r\n    fetch(\"http://localhost:3000/graphql\", {\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n      .then(result => {\r\n        if (result.status !== 200 && result.status !== 201) {\r\n          throw new Error(\"Failed\")\r\n        }\r\n        return result.json()\r\n      })\r\n      .then(resData => {\r\n        if (resData && resData.data.singleJockey) {\r\n          this.setState({ exist: true, isLoading: false })          \r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      })\r\n  }\r\n  saveHandler = (event) => {\r\n\r\n    this.setState({ isLoading: true })\r\n    const requestBody = {\r\n      query: `\r\n        mutation CreateJockey($jockey: JockeyInput) {\r\n          createJockey(jockeyInput: $jockey) {\r\n            _id\r\n            name\r\n          }\r\n        }\r\n      `,\r\n      variables: {\r\n        jockey: this.state.jockey\r\n      }\r\n    }\r\n\r\n    const token = this.context.token\r\n\r\n    fetch(\"http://localhost:3000/graphql\", {\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        \"Authorization\": `Bearer ${token}`,\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n      .then(result => {\r\n        if (result.status !== 200 && result.status !== 201) {\r\n          throw new Error(\"Failed\")\r\n        }\r\n        return result.json()\r\n      })\r\n      .then(resData => {\r\n        this.setState((prevState) => {\r\n          return { isLoading: false }\r\n        })\r\n        this.setState({ created: true })\r\n        \r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      })\r\n  }\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <form>\r\n          <div className=\"col-md-3 mb-3\">\r\n            <label htmlFor=\"name\">Name</label>\r\n            <input type=\"text\" onBlur={this.validateJockey} className=\"form-control\" onChange={this.onHandleChange} id=\"name\" value={this.state.jockey.name} />\r\n          </div>\r\n        </form>\r\n        <button className=\"btn btn-secondary\">\r\n          Cancel\r\n        </button>\r\n        <button onClick={this.saveHandler} className=\"btn btn-primary\">\r\n          Save\r\n        </button>\r\n\r\n        <Dialog header= \"Jockey Exists!\" visible={this.state.exist} style={{ width: '50vw' }} modal={true} onHide={this.modalCancelHandler}>\r\n          {this.state.jockey.name} already exists!\r\n        </Dialog>\r\n        <Dialog header={this.state.jockey.name + \" Created!\"} visible={this.state.created} style={{ width: '50vw' }} modal={true} onHide={this.modalCancelHandler}>\r\n          <div>\r\n            <div>\r\n              Name: {this.state.jockey.name}\r\n            </div>\r\n          </div>\r\n        </Dialog>\r\n\r\n        {\r\n          this.state.isLoading && <Spinner />\r\n        }\r\n      </React.Fragment >\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateJockeyPage\r\n"]},"metadata":{},"sourceType":"module"}