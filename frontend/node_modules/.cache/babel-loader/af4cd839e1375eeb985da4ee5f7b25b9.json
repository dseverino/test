{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Domingo\\\\Desktop\\\\Git Projects\\\\test\\\\graphql-react-event-booking\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"C:\\\\Users\\\\Domingo\\\\Desktop\\\\Git Projects\\\\test\\\\graphql-react-event-booking\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Domingo\\\\Desktop\\\\Git Projects\\\\test\\\\graphql-react-event-booking\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Domingo\\\\Desktop\\\\Git Projects\\\\test\\\\graphql-react-event-booking\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Domingo\\\\Desktop\\\\Git Projects\\\\test\\\\graphql-react-event-booking\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Domingo\\\\Desktop\\\\Git Projects\\\\test\\\\graphql-react-event-booking\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Domingo\\\\Desktop\\\\Git Projects\\\\test\\\\graphql-react-event-booking\\\\frontend\\\\src\\\\pages\\\\Horses.js\";\nimport React, { Component } from \"react\";\nimport Modal from \"../components/Modal/Modal\";\nimport Backdrop from \"../components/Backdrop/Backdrop\";\nimport HorseList from \"../components/Horses/HorseList/HorseList\";\nimport Spinner from \"../components/Spinner/Spinner\";\nimport AuthContext from \"../context/auth-context\";\nimport \"../pages/Horses.css\";\n\nvar HorsesPage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(HorsesPage, _Component);\n\n  function HorsesPage(props) {\n    var _this;\n\n    _classCallCheck(this, HorsesPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(HorsesPage).call(this, props));\n\n    _this.componentDidMount = function () {\n      _this.fetchHorses();\n    };\n\n    _this.state = {\n      creating: false,\n      horses: [],\n      isLoading: false,\n      selectedHorse: null\n    };\n    _this.isActive = true;\n\n    _this.startCreateHorse = function () {\n      _this.setState({\n        creating: true\n      });\n    };\n\n    _this.modalCancelHandler = function () {\n      _this.setState({\n        creating: false,\n        selectedHorse: null\n      });\n    };\n\n    _this.onDetailsHandler = function (horseId) {\n      _this.setState(function (prevState) {\n        var selectedHorse = prevState.horses.find(function (horse) {\n          return horse._id === horseId;\n        });\n        return {\n          selectedHorse: selectedHorse\n        };\n      });\n    };\n\n    _this.bookHorseHandler = function () {\n      if (!_this.context.token) {\n        _this.setState({\n          selectedHorse: null\n        });\n\n        return;\n      }\n\n      var requestBody = {\n        query: \"\\n        mutation BookHorse ($id: ID!) {\\n          bookHorse(horseId: $id) {\\n            _id\\n            createdAt\\n            updatedAt\\n          }\\n        }\\n      \",\n        variables: {\n          id: _this.state.selectedHorse._id\n        }\n      };\n      fetch(\"http://localhost:3000/graphql\", {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          \"Authorization\": \"Bearer \".concat(_this.context.token),\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(function (result) {\n        if (result.status !== 200 && result.status !== 201) {\n          throw new Error(\"Failed\");\n        }\n\n        return result.json();\n      }).then(function (resData) {\n        _this.setState({\n          selectedHorse: null\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.modalConfirmHandler = function () {\n      console.log(_this.state);\n      var requestBody = {\n        query: \"\\n        mutation CreateHorse($title: String!, $price: Float!, $date: String!, $desc: String!) {\\n          createHorse(horseInput: {title: $title, price: $price, date: $date, description: $desc}) {\\n            name\\n            weight\\n            birth\\n            color\\n            sex\\n            sire\\n            dam\\n            stable\\n          }\\n        }\\n      \",\n        variables: {\n          title: title,\n          price: price,\n          date: date,\n          desc: description\n        }\n      };\n      var token = _this.context.token;\n      fetch(\"http://localhost:3000/graphql\", {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          \"Authorization\": \"Bearer \".concat(token),\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(function (result) {\n        if (result.status !== 200 && result.status !== 201) {\n          throw new Error(\"Failed\");\n        }\n\n        return result.json();\n      }).then(function (resData) {\n        _this.setState(function (prevState) {\n          return {\n            horses: [].concat(_toConsumableArray(prevState.horses), [resData.data.createHorse])\n          };\n        });\n\n        _this.modalCancelHandler();\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.titleElRef = React.createRef();\n    _this.priceElRef = React.createRef();\n    _this.dateElRef = React.createRef();\n    _this.descriptionElRef = React.createRef();\n    return _this;\n  }\n\n  _createClass(HorsesPage, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.isActive = false;\n    }\n  }, {\n    key: \"fetchHorses\",\n    value: function fetchHorses() {\n      var _this2 = this;\n\n      this.setState({\n        isLoading: true\n      });\n      var requestBody = {\n        query: \"\\n        query { \\n          horses {\\n            name\\n            weight\\n            birth\\n            color\\n            sex\\n            sire\\n            dam\\n            stable\\n          }\\n        }\\n      \"\n      };\n      fetch(\"http://localhost:3000/graphql\", {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(function (result) {\n        if (result.status !== 200 && result.status !== 201) {\n          throw new Error(\"Failed\");\n        }\n\n        return result.json();\n      }).then(function (resData) {\n        if (_this2.isActive) {\n          _this2.setState({\n            horses: resData.data.horses,\n            isLoading: false\n          });\n        }\n      }).catch(function (error) {\n        console.log(error);\n\n        _this2.setState({\n          isLoading: false\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, (this.state.creating || this.state.selectedHorse) && React.createElement(Backdrop, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }), this.state.creating && React.createElement(Modal, {\n        title: \"Add Horse\",\n        confirmTitle: \"Confirm\",\n        canCancel: true,\n        canConfirm: true,\n        onCancel: this.modalCancelHandler,\n        onConfirm: this.modalConfirmHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        value: this.state.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"weight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, \"Weight\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"weight\",\n        value: this.state.weight,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"birth\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"Birth\"), React.createElement(\"input\", {\n        type: \"datetime-local\",\n        id: \"birth\",\n        value: this.state.birth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"color\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213\n        },\n        __self: this\n      }, \"Color\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"color\",\n        value: this.state.color,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"sex\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, \"Sex\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"sex\",\n        value: this.state.sex,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"sire\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221\n        },\n        __self: this\n      }, \"Sire\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"sire\",\n        value: this.state.sire,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"dam\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, \"Dam\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"dam\",\n        value: this.state.dam,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"stable\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, \"Stable\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"stable\",\n        value: this.state.stable,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      })))), this.state.selectedHorse && React.createElement(Modal, {\n        title: this.state.selectedHorse.title,\n        canCancel: true,\n        canConfirm: true,\n        confirmTitle: this.context.token ? \"Book\" : \"Confirm\",\n        onCancel: this.modalCancelHandler,\n        onConfirm: this.bookHorseHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      }, this.state.selectedHorse.title), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \"$\", Intl.NumberFormat().format(this.state.selectedHorse.price), \" - \", new Date(this.state.selectedHorse.date).toLocaleDateString()), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, this.state.selectedHorse.description)), this.context.token && React.createElement(\"div\", {\n        className: \"horses-control\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, \"Share your own Horses!\"), React.createElement(\"button\", {\n        onClick: this.startCreateHorse,\n        className: \"btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, \"Create Horse\")), this.state.isLoading ? React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }) : React.createElement(HorseList, {\n        openViewDetails: this.onDetailsHandler,\n        horses: this.state.horses,\n        userId: this.context.userId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return HorsesPage;\n}(Component);\n\nHorsesPage.contextType = AuthContext;\nexport default HorsesPage;","map":{"version":3,"sources":["C:\\Users\\Domingo\\Desktop\\Git Projects\\test\\graphql-react-event-booking\\frontend\\src\\pages\\Horses.js"],"names":["React","Component","Modal","Backdrop","HorseList","Spinner","AuthContext","HorsesPage","props","componentDidMount","fetchHorses","state","creating","horses","isLoading","selectedHorse","isActive","startCreateHorse","setState","modalCancelHandler","onDetailsHandler","horseId","prevState","find","horse","_id","bookHorseHandler","context","token","requestBody","query","variables","id","fetch","method","body","JSON","stringify","headers","then","result","status","Error","json","resData","catch","error","console","log","modalConfirmHandler","title","price","date","desc","description","data","createHorse","titleElRef","createRef","priceElRef","dateElRef","descriptionElRef","name","weight","birth","color","sex","sire","dam","stable","Intl","NumberFormat","format","Date","toLocaleDateString","userId","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport Modal from \"../components/Modal/Modal\";\r\nimport Backdrop from \"../components/Backdrop/Backdrop\";\r\nimport HorseList from \"../components/Horses/HorseList/HorseList\"\r\nimport Spinner from \"../components/Spinner/Spinner\";\r\n\r\nimport AuthContext from \"../context/auth-context\";\r\n\r\nimport \"../pages/Horses.css\";\r\n\r\nclass HorsesPage extends Component {\r\n  static contextType = AuthContext\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.titleElRef = React.createRef()\r\n    this.priceElRef = React.createRef()\r\n    this.dateElRef = React.createRef()\r\n    this.descriptionElRef = React.createRef()\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    this.fetchHorses()\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.isActive = false;\r\n  }\r\n\r\n  state = {\r\n    creating: false,\r\n    horses: [],\r\n    isLoading: false,\r\n    selectedHorse: null\r\n  }\r\n  isActive = true;\r\n\r\n  startCreateHorse = () => {\r\n    this.setState({ creating: true })\r\n  }\r\n\r\n  modalCancelHandler = () => {\r\n    this.setState({ creating: false, selectedHorse: null })\r\n  }\r\n\r\n  onDetailsHandler = (horseId) => {\r\n    this.setState(prevState => {\r\n      const selectedHorse = prevState.horses.find(horse => horse._id === horseId)\r\n      return { selectedHorse: selectedHorse }\r\n    })\r\n  }\r\n\r\n  bookHorseHandler = () => {\r\n    if (!this.context.token) {\r\n      this.setState({ selectedHorse: null })\r\n      return;\r\n    }\r\n    const requestBody = {\r\n      query: `\r\n        mutation BookHorse ($id: ID!) {\r\n          bookHorse(horseId: $id) {\r\n            _id\r\n            createdAt\r\n            updatedAt\r\n          }\r\n        }\r\n      `,\r\n      variables: {\r\n        id: this.state.selectedHorse._id\r\n      }\r\n    }\r\n\r\n    fetch(\"http://localhost:3000/graphql\", {\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        \"Authorization\": `Bearer ${this.context.token}`,\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n      .then(result => {\r\n        if (result.status !== 200 && result.status !== 201) {\r\n          throw new Error(\"Failed\")\r\n        }\r\n        return result.json()\r\n      })\r\n      .then(resData => {\r\n        this.setState({ selectedHorse: null })\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  fetchHorses() {\r\n    this.setState({ isLoading: true })\r\n    const requestBody = {\r\n      query: `\r\n        query { \r\n          horses {\r\n            name\r\n            weight\r\n            birth\r\n            color\r\n            sex\r\n            sire\r\n            dam\r\n            stable\r\n          }\r\n        }\r\n      `\r\n    }\r\n\r\n    fetch(\"http://localhost:3000/graphql\", {\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n      .then(result => {\r\n        if (result.status !== 200 && result.status !== 201) {\r\n          throw new Error(\"Failed\")\r\n        }\r\n        return result.json()\r\n      })\r\n      .then(resData => {\r\n        if (this.isActive) {\r\n          this.setState({ horses: resData.data.horses, isLoading: false });\r\n        }\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n        this.setState({ isLoading: false });\r\n      })\r\n  }\r\n\r\n  modalConfirmHandler = () => {\r\n    console.log(this.state)\r\n\r\n    \r\n    const requestBody = {\r\n      query: `\r\n        mutation CreateHorse($title: String!, $price: Float!, $date: String!, $desc: String!) {\r\n          createHorse(horseInput: {title: $title, price: $price, date: $date, description: $desc}) {\r\n            name\r\n            weight\r\n            birth\r\n            color\r\n            sex\r\n            sire\r\n            dam\r\n            stable\r\n          }\r\n        }\r\n      `,\r\n      variables: {\r\n        title: title,\r\n        price: price,\r\n        date: date,\r\n        desc: description\r\n      }\r\n    }\r\n\r\n    const token = this.context.token\r\n\r\n    fetch(\"http://localhost:3000/graphql\", {\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        \"Authorization\": `Bearer ${token}`,\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n      .then(result => {\r\n        if (result.status !== 200 && result.status !== 201) {\r\n          throw new Error(\"Failed\")\r\n        }\r\n        return result.json()\r\n      })\r\n      .then(resData => {\r\n        this.setState((prevState) => {\r\n          return { horses: [...prevState.horses, resData.data.createHorse] }\r\n        })\r\n        this.modalCancelHandler();\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {(this.state.creating || this.state.selectedHorse) && <Backdrop></Backdrop>}\r\n        {this.state.creating && (\r\n          <Modal title=\"Add Horse\" confirmTitle=\"Confirm\" canCancel canConfirm onCancel={this.modalCancelHandler} onConfirm={this.modalConfirmHandler}>\r\n            <form>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input type=\"text\" id=\"name\" value={this.state.name} />\r\n              </div>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"weight\">Weight</label>\r\n                <input type=\"text\" id=\"weight\" value={this.state.weight} />\r\n              </div>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"birth\">Birth</label>\r\n                <input type=\"datetime-local\" id=\"birth\" value={this.state.birth} />\r\n              </div>              \r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"color\">Color</label>\r\n                <input type=\"text\" id=\"color\" value={this.state.color} />\r\n              </div>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"sex\">Sex</label>\r\n                <input type=\"text\" id=\"sex\" value={this.state.sex} />\r\n              </div>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"sire\">Sire</label>\r\n                <input type=\"text\" id=\"sire\" value={this.state.sire} />\r\n              </div>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"dam\">Dam</label>\r\n                <input type=\"text\" id=\"dam\" value={this.state.dam} />\r\n              </div>\r\n              <div className=\"form-control\">\r\n                <label htmlFor=\"stable\">Stable</label>\r\n                <input type=\"text\" id=\"stable\" value={this.state.stable} />\r\n              </div>\r\n            </form>\r\n          </Modal>\r\n        )}\r\n        {this.state.selectedHorse && (\r\n          <Modal\r\n            title={this.state.selectedHorse.title}\r\n            canCancel\r\n            canConfirm\r\n            confirmTitle={this.context.token ? \"Book\" : \"Confirm\"}\r\n            onCancel={this.modalCancelHandler}\r\n            onConfirm={this.bookHorseHandler}\r\n          >\r\n            <h1>{this.state.selectedHorse.title}</h1>\r\n            <h2>${Intl.NumberFormat().format(this.state.selectedHorse.price)} - {new Date(this.state.selectedHorse.date).toLocaleDateString()}</h2>\r\n            <p>{this.state.selectedHorse.description}</p>\r\n          </Modal>\r\n        )}\r\n        {this.context.token && (\r\n          <div className=\"horses-control\">\r\n            <p>Share your own Horses!</p>\r\n            <button onClick={this.startCreateHorse} className=\"btn\">Create Horse</button>\r\n          </div>\r\n        )}\r\n        {this.state.isLoading ? (\r\n          <Spinner />\r\n        ) : (\r\n            <HorseList openViewDetails={this.onDetailsHandler} horses={this.state.horses} userId={this.context.userId}></HorseList>\r\n          )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default HorsesPage\r\n"]},"metadata":{},"sourceType":"module"}