{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Domingo\\\\Desktop\\\\Git Projects\\\\test\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Domingo\\\\Desktop\\\\Git Projects\\\\test\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Domingo\\\\Desktop\\\\Git Projects\\\\test\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Domingo\\\\Desktop\\\\Git Projects\\\\test\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Domingo\\\\Desktop\\\\Git Projects\\\\test\\\\frontend\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Domingo\\\\Desktop\\\\Git Projects\\\\test\\\\frontend\\\\src\\\\pages\\\\Race\\\\CreateRace.js\";\nimport React, { Component } from \"react\";\nimport AuthContext from \"../../context/auth-context\"; //import Backdrop from \"../components/Backdrop/Backdrop\";\n//import TestModal from \"../components/Modal/Modal\";\n//import Modal from \"react-bootstrap-modal\";\n\nimport { Dialog } from 'primereact/dialog';\nimport Spinner from \"../../components/Spinner/Spinner\";\nimport { Dropdown } from 'primereact/dropdown';\nimport { Checkbox } from 'primereact/checkbox';\nimport { InputText } from 'primereact/inputtext'; //import ModalHeader from \"react-bootstrap/ModalHeader\";\n//import { InputText } from 'primereact/inputtext';\n//import { Dropdown } from 'primereact/dropdown';\n\nvar CreateRacePage =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(CreateRacePage, _Component);\n\n  function CreateRacePage(props) {\n    var _this;\n\n    _classCallCheck(this, CreateRacePage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CreateRacePage).call(this, props));\n    _this.state = {\n      creating: false,\n      races: [],\n      isLoading: false,\n      programExist: false,\n      programNotExist: false,\n      visible: false,\n      created: false,\n      race: {\n        event: \"1ra Carrera\",\n        distance: \"1,100 Metros\",\n        procedences: [],\n        horseAge: \"3 Años y Mayores\",\n        claimingType: \"Libres\",\n        claimingPrice: \"40,000\",\n        purse: \"\",\n        programId: \"\",\n        spec: \"\"\n      }\n    };\n\n    _this.modalCancelHandler = function (event) {\n      _this.setState({\n        creating: false,\n        programExist: false,\n        created: false\n      });\n\n      _this.setState({\n        race: {\n          event: _this.events[_this.events.indexOf(_this.state.race.event)],\n          distance: \"1,100 Metros\",\n          procedences: [],\n          horseAge: \"3 Años y Mayores\",\n          claimingType: \"Libres\",\n          claimingPrice: \"40,000\",\n          purse: \"\",\n          programId: \"\",\n          spec: \"\"\n        }\n      });\n    };\n\n    _this.notExistHandler = function () {\n      _this.setState({\n        programNotExist: false\n      });\n    };\n\n    _this.onHandleChange = function (e) {\n      var newRace = Object.assign({}, _this.state.race);\n      newRace[e.target.id] = e.target.value;\n\n      _this.setState({\n        race: newRace\n      });\n    };\n\n    _this.onNumberChangeHandler = function (e) {\n      var newRace = Object.assign({}, _this.state.race);\n      newRace[e.target.id] = parseInt(e.target.value);\n\n      _this.setState({\n        race: newRace\n      });\n    };\n\n    _this.validateProgram = function () {\n      if (!_this.state.race.programId) {\n        return false;\n      }\n\n      _this.setState({\n        isLoading: true\n      });\n\n      var requestBody = {\n        query: \"\\n        query SingleProgram($programId: Int!) {\\n          singleProgram(programId: $programId) {\\n            _id\\n            races{\\n              event\\n            }\\n          }\\n        }\\n      \",\n        variables: {\n          programId: _this.state.race.programId\n        }\n      };\n      fetch(\"http://localhost:3000/graphql\", {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(function (result) {\n        if (result.status !== 200 && result.status !== 201) {\n          throw new Error(\"Failed\");\n        }\n\n        return result.json();\n      }).then(function (resData) {\n        if (resData && resData.data.singleProgram) {\n          _this.setState({\n            programExist: true,\n            isLoading: false\n          });\n\n          if (resData.data.singleProgram.races.length) {\n            var newRace = Object.assign({}, _this.state.race);\n            newRace[\"event\"] = _this.events[resData.data.singleProgram.races.length];\n\n            _this.setState({\n              race: newRace\n            });\n          }\n        } else {\n          _this.setState({\n            programNotExist: true,\n            programExist: false\n          });\n        }\n\n        _this.setState({\n          isLoading: false\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.saveHandler = function (event) {\n      _this.setState({\n        isLoading: true\n      });\n\n      var requestBody = {\n        query: \"\\n        mutation CreateRace($race: RaceInput) {\\n          createRace(raceInput: $race) {\\n            programId\\n            event\\n            distance\\n            claimingPrice\\n            claimingType\\n            procedences\\n            horseAge\\n            spec\\n            purse\\n          }\\n        }\\n      \",\n        variables: {\n          race: _this.state.race\n        }\n      };\n      var token = _this.context.token;\n      fetch(\"http://localhost:3000/graphql\", {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          \"Authorization\": \"Bearer \".concat(token),\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(function (result) {\n        if (result.status !== 200 && result.status !== 201) {\n          throw new Error(\"Failed\");\n        }\n\n        return result.json();\n      }).then(function (resData) {\n        _this.setState(function (prevState) {\n          return {\n            isLoading: false\n          };\n        });\n\n        _this.setState({\n          created: true\n        });\n      }).catch(function (error) {\n        console.log(error);\n      });\n    };\n\n    _this.onProcedencesChange = function (e) {\n      console.log(e);\n      var newRace = Object.assign({}, _this.state.race);\n      if (e.checked) newRace.procedences.push(e.value);else newRace.procedences.splice(newRace.procedences.indexOf(e.value), 1);\n\n      _this.setState({\n        race: newRace\n      });\n    };\n\n    _this.events = [\"1ra Carrera\", \"2da Carrera\", \"3ra Carrera\", \"4ta Carrera\", \"5ta Carrera\", \"6ta Carrera\"];\n    return _this;\n  }\n\n  _createClass(CreateRacePage, [{\n    key: \"render\",\n    value: function render() {\n      var distances = [{\n        label: \"1,000 Metros\",\n        value: \"1,000 Metros\"\n      }, {\n        label: \"1,100 Metros\",\n        value: \"1,100 Metros\"\n      }, {\n        label: \"1,200 Metros\",\n        value: \"1,200 Metros\"\n      }, {\n        label: \"1,300 Metros\",\n        value: \"1,300 Metros\"\n      }, {\n        label: \"1,400 Metros\",\n        value: \"1,400 Metros\"\n      }, {\n        label: \"1,700 Metros\",\n        value: \"1,700 Metros\"\n      }, {\n        label: \"1,800 Metros\",\n        value: \"1,800 Metros\"\n      }, {\n        label: \"1,900 Metros\",\n        value: \"1,900 Metros\"\n      }, {\n        label: \"2,000 Metros\",\n        value: \"2,000 Metros\"\n      }];\n      var claimingPrices = [{\n        label: \"40,000\",\n        value: \"40,000\"\n      }, {\n        label: \"75,000\",\n        value: \"75,000\"\n      }, {\n        label: \"125,000\",\n        value: \"125,000\"\n      }, {\n        label: \"No Reclamables\",\n        value: \"No Reclamables\"\n      }];\n      var claimingTypes = [{\n        label: \"Libres\",\n        value: \"Libres\"\n      }, {\n        label: \"Ganadores de 1 y 2 primeras\",\n        value: \"Ganadores de 1 y 2 primeras\"\n      }, {\n        label: \"No Ganadores\",\n        value: \"No Ganadores\"\n      }];\n      var ages = [{\n        label: \"2 Años\",\n        value: \"2 Años\"\n      }, {\n        label: \"3 Años\",\n        value: \"3 Años\"\n      }, {\n        label: \"3 Años y Mayores\",\n        value: \"3 Años y Mayores\"\n      }];\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-md-3 mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"programId\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \"Program\"), React.createElement(InputText, {\n        keyfilter: \"pint\",\n        onBlur: this.validateProgram,\n        className: \"form-control\",\n        onChange: this.onNumberChangeHandler,\n        id: \"programId\",\n        value: this.state.race.programId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-md-3 mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"event\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, \"Event\"), React.createElement(InputText, {\n        disabled: true,\n        className: \"form-control\",\n        id: \"event\",\n        value: this.state.race.event,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-md-3 mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"distance\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, \"Distance\"), React.createElement(Dropdown, {\n        disabled: !this.state.programExist,\n        id: \"distance\",\n        value: this.state.race.distance,\n        options: distances,\n        onChange: this.onHandleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-md-3 mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"claimingPrice\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, \"Claiming Price\"), React.createElement(Dropdown, {\n        disabled: !this.state.programExist,\n        id: \"claimingPrice\",\n        value: this.state.race.claimingPrice,\n        options: claimingPrices,\n        onChange: this.onHandleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-md-3 mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"claimingType\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, \"Claiming Type\"), React.createElement(Dropdown, {\n        disabled: !this.state.programExist,\n        id: \"claimingType\",\n        value: this.state.race.claimingType,\n        options: claimingTypes,\n        onChange: this.onHandleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-md-3 mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"procedences\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, \"procedences\"), React.createElement(\"div\", {\n        className: \"p-col-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"nativos\",\n        className: \"p-checkbox-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, \"Nativos\"), React.createElement(Checkbox, {\n        disabled: !this.state.programExist,\n        inputId: \"nativos\",\n        value: \"Nativos\",\n        onChange: this.onProcedencesChange,\n        checked: this.state.race.procedences.includes(\"Nativos\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"p-col-12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"importados\",\n        className: \"p-checkbox-label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 263\n        },\n        __self: this\n      }, \"Importados\"), React.createElement(Checkbox, {\n        disabled: !this.state.programExist,\n        inputId: \"importados\",\n        value: \"Importados\",\n        onChange: this.onProcedencesChange,\n        checked: this.state.race.procedences.includes(\"Importados\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"col-md-3 mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"horseAge\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }, \"Age\"), React.createElement(Dropdown, {\n        disabled: !this.state.programExist,\n        id: \"claimingType\",\n        value: this.state.race.horseAge,\n        options: ages,\n        onChange: this.onHandleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-md-3 mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"spec\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274\n        },\n        __self: this\n      }, \"Specifications\"), React.createElement(\"input\", {\n        disabled: !this.state.programExist,\n        type: \"text\",\n        className: \"form-control\",\n        onChange: this.onHandleChange,\n        id: \"spec\",\n        value: this.state.race.spec,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col-md-3 mb-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"purse\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, \"Purse\"), React.createElement(InputText, {\n        disabled: !this.state.programExist,\n        keyfilter: \"pint\",\n        className: \"form-control\",\n        value: this.state.race.purse,\n        onChange: this.onNumberChangeHandler,\n        id: \"purse\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }))), React.createElement(\"button\", {\n        className: \"btn btn-secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(\"button\", {\n        onClick: this.saveHandler,\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, \"Save\"), React.createElement(Dialog, {\n        header: \"Not exists!\",\n        visible: this.state.programNotExist,\n        style: {\n          width: '50vw'\n        },\n        modal: true,\n        onHide: this.notExistHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, \"Program \", this.state.race.prorgramId, \" does not exist!\"), React.createElement(Dialog, {\n        header: this.state.race.event + \" Created!\",\n        visible: this.state.created,\n        style: {\n          width: '50vw'\n        },\n        modal: true,\n        onHide: this.modalCancelHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 295\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 296\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 297\n        },\n        __self: this\n      }, \"Event: \", this.state.race.event), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 300\n        },\n        __self: this\n      }, \"Distance: \", this.state.race.distance), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }, \"Procedence: \", this.state.race.procedences.toString()), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306\n        },\n        __self: this\n      }, \"Age: \", this.state.race.horseAge), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, \"Claiming: \", this.state.race.claimingPrice, \" \", this.state.race.claimingType), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }, \"Event: \", this.state.race.event))), this.state.isLoading && React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return CreateRacePage;\n}(Component);\n\nCreateRacePage.contextType = AuthContext;\nexport default CreateRacePage;","map":{"version":3,"sources":["C:\\Users\\Domingo\\Desktop\\Git Projects\\test\\frontend\\src\\pages\\Race\\CreateRace.js"],"names":["React","Component","AuthContext","Dialog","Spinner","Dropdown","Checkbox","InputText","CreateRacePage","props","state","creating","races","isLoading","programExist","programNotExist","visible","created","race","event","distance","procedences","horseAge","claimingType","claimingPrice","purse","programId","spec","modalCancelHandler","setState","events","indexOf","notExistHandler","onHandleChange","e","newRace","Object","assign","target","id","value","onNumberChangeHandler","parseInt","validateProgram","requestBody","query","variables","fetch","method","body","JSON","stringify","headers","then","result","status","Error","json","resData","data","singleProgram","length","catch","error","console","log","saveHandler","token","context","prevState","onProcedencesChange","checked","push","splice","distances","label","claimingPrices","claimingTypes","ages","includes","width","prorgramId","toString","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport AuthContext from \"../../context/auth-context\";\r\n//import Backdrop from \"../components/Backdrop/Backdrop\";\r\n//import TestModal from \"../components/Modal/Modal\";\r\n//import Modal from \"react-bootstrap-modal\";\r\nimport { Dialog } from 'primereact/dialog';\r\nimport Spinner from \"../../components/Spinner/Spinner\";\r\nimport { Dropdown } from 'primereact/dropdown';\r\nimport { Checkbox } from 'primereact/checkbox';\r\nimport { InputText } from 'primereact/inputtext';\r\n//import ModalHeader from \"react-bootstrap/ModalHeader\";\r\n\r\n//import { InputText } from 'primereact/inputtext';\r\n//import { Dropdown } from 'primereact/dropdown';\r\n\r\nclass CreateRacePage extends Component {\r\n  static contextType = AuthContext\r\n\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.events = [\r\n      \"1ra Carrera\", \r\n      \"2da Carrera\", \r\n      \"3ra Carrera\", \r\n      \"4ta Carrera\", \r\n      \"5ta Carrera\", \r\n      \"6ta Carrera\",\r\n    ]\r\n  }\r\n\r\n  state = {\r\n    creating: false,\r\n    races: [],\r\n    isLoading: false,\r\n    programExist: false,\r\n    programNotExist: false,\r\n    visible: false,\r\n    created: false,\r\n    race: {\r\n      event: \"1ra Carrera\",\r\n      distance: \"1,100 Metros\",\r\n      procedences: [],\r\n      horseAge: \"3 Años y Mayores\",\r\n      claimingType: \"Libres\",\r\n      claimingPrice: \"40,000\",\r\n      purse: \"\",\r\n      programId: \"\",\r\n      spec: \"\"\r\n    }\r\n  }\r\n\r\n  modalCancelHandler = (event) => {\r\n    this.setState({ creating: false, programExist: false, created: false })\r\n    this.setState({\r\n      race: {\r\n        event: this.events[this.events.indexOf(this.state.race.event)],\r\n        distance: \"1,100 Metros\",\r\n        procedences: [],\r\n        horseAge: \"3 Años y Mayores\",\r\n        claimingType: \"Libres\",\r\n        claimingPrice: \"40,000\",\r\n        purse: \"\",\r\n        programId: \"\",\r\n        spec: \"\"\r\n      }\r\n    })\r\n  }\r\n\r\n  notExistHandler = () => {\r\n    this.setState({ programNotExist: false })\r\n  }\r\n\r\n  onHandleChange = (e) => {\r\n    let newRace = Object.assign({}, this.state.race)\r\n    newRace[e.target.id] = e.target.value\r\n    this.setState({ race: newRace })\r\n  }\r\n\r\n  onNumberChangeHandler = (e) => {\r\n\r\n    let newRace = Object.assign({}, this.state.race);\r\n    newRace[e.target.id] = parseInt(e.target.value);\r\n    this.setState({ race: newRace });\r\n  }\r\n\r\n  validateProgram = () => {\r\n    if (!this.state.race.programId) {\r\n      return false;\r\n    }\r\n    this.setState({ isLoading: true })\r\n    const requestBody = {\r\n      query: `\r\n        query SingleProgram($programId: Int!) {\r\n          singleProgram(programId: $programId) {\r\n            _id\r\n            races{\r\n              event\r\n            }\r\n          }\r\n        }\r\n      `,\r\n      variables: {\r\n        programId: this.state.race.programId\r\n      }\r\n    }\r\n    fetch(\"http://localhost:3000/graphql\", {\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n      .then(result => {\r\n        if (result.status !== 200 && result.status !== 201) {\r\n          throw new Error(\"Failed\");\r\n        }\r\n        return result.json()\r\n      })\r\n      .then(resData => {\r\n        if (resData && resData.data.singleProgram) {\r\n          this.setState({ programExist: true, isLoading: false });\r\n          if (resData.data.singleProgram.races.length) {            \r\n            let newRace = Object.assign({}, this.state.race);\r\n            newRace[\"event\"] = this.events[resData.data.singleProgram.races.length]\r\n            this.setState({ race: newRace });\r\n          }\r\n        }\r\n        else {\r\n          this.setState({ programNotExist: true, programExist: false });\r\n        }\r\n        this.setState({ isLoading: false })\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  saveHandler = (event) => {\r\n    this.setState({ isLoading: true })\r\n    const requestBody = {\r\n      query: `\r\n        mutation CreateRace($race: RaceInput) {\r\n          createRace(raceInput: $race) {\r\n            programId\r\n            event\r\n            distance\r\n            claimingPrice\r\n            claimingType\r\n            procedences\r\n            horseAge\r\n            spec\r\n            purse\r\n          }\r\n        }\r\n      `,\r\n      variables: {\r\n        race: this.state.race\r\n      }\r\n    }\r\n\r\n    const token = this.context.token\r\n\r\n    fetch(\"http://localhost:3000/graphql\", {\r\n      method: 'POST',\r\n      body: JSON.stringify(requestBody),\r\n      headers: {\r\n        \"Authorization\": `Bearer ${token}`,\r\n        \"Content-Type\": \"application/json\"\r\n      }\r\n    })\r\n      .then(result => {\r\n        if (result.status !== 200 && result.status !== 201) {\r\n          throw new Error(\"Failed\")\r\n        }\r\n        return result.json()\r\n      })\r\n      .then(resData => {\r\n        this.setState((prevState) => {\r\n          return { isLoading: false }\r\n        })\r\n        this.setState({ created: true })\r\n\r\n      })\r\n      .catch(error => {\r\n        console.log(error);\r\n      })\r\n  }\r\n\r\n  onProcedencesChange = (e) => {\r\n    console.log(e)\r\n    let newRace = Object.assign({}, this.state.race);\r\n    if (e.checked)\r\n      newRace.procedences.push(e.value);\r\n    else\r\n      newRace.procedences.splice(newRace.procedences.indexOf(e.value), 1);\r\n    this.setState({ race: newRace });\r\n  }\r\n\r\n  render() {\r\n    const distances = [\r\n      { label: \"1,000 Metros\", value: \"1,000 Metros\" },\r\n      { label: \"1,100 Metros\", value: \"1,100 Metros\" },\r\n      { label: \"1,200 Metros\", value: \"1,200 Metros\" },\r\n      { label: \"1,300 Metros\", value: \"1,300 Metros\" },\r\n      { label: \"1,400 Metros\", value: \"1,400 Metros\" },\r\n      { label: \"1,700 Metros\", value: \"1,700 Metros\" },\r\n      { label: \"1,800 Metros\", value: \"1,800 Metros\" },\r\n      { label: \"1,900 Metros\", value: \"1,900 Metros\" },\r\n      { label: \"2,000 Metros\", value: \"2,000 Metros\" },\r\n    ]\r\n    const claimingPrices = [\r\n      { label: \"40,000\", value: \"40,000\" },\r\n      { label: \"75,000\", value: \"75,000\" },\r\n      { label: \"125,000\", value: \"125,000\" },\r\n      { label: \"No Reclamables\", value: \"No Reclamables\" }\r\n    ]\r\n    const claimingTypes = [\r\n      { label: \"Libres\", value: \"Libres\" },\r\n      { label: \"Ganadores de 1 y 2 primeras\", value: \"Ganadores de 1 y 2 primeras\" },\r\n      { label: \"No Ganadores\", value: \"No Ganadores\" }\r\n    ]\r\n    const ages = [\r\n      { label: \"2 Años\", value: \"2 Años\" },\r\n      { label: \"3 Años\", value: \"3 Años\" },\r\n      { label: \"3 Años y Mayores\", value: \"3 Años y Mayores\" }\r\n    ]\r\n    return (\r\n      <React.Fragment>\r\n        <form>\r\n          <div className=\"col-md-3 mb-3\">\r\n            <label htmlFor=\"programId\">Program</label>\r\n            <InputText keyfilter=\"pint\" onBlur={this.validateProgram} className=\"form-control\" onChange={this.onNumberChangeHandler} id=\"programId\" value={this.state.race.programId} />\r\n          </div>\r\n\r\n          <div className=\"col-md-3 mb-3\">\r\n            <label htmlFor=\"event\">Event</label>\r\n            <InputText disabled={true} className=\"form-control\" id=\"event\" value={this.state.race.event} />\r\n          </div>\r\n\r\n          <div className=\"col-md-3 mb-3\">\r\n            <label htmlFor=\"distance\">Distance</label>\r\n            <Dropdown disabled={!this.state.programExist} id=\"distance\" value={this.state.race.distance} options={distances} onChange={this.onHandleChange} />\r\n          </div>\r\n\r\n          <div className=\"col-md-3 mb-3\">\r\n            <label htmlFor=\"claimingPrice\">Claiming Price</label>\r\n            <Dropdown disabled={!this.state.programExist} id=\"claimingPrice\" value={this.state.race.claimingPrice} options={claimingPrices} onChange={this.onHandleChange} />\r\n          </div>\r\n          <div className=\"col-md-3 mb-3\">\r\n            <label htmlFor=\"claimingType\">Claiming Type</label>\r\n            <Dropdown disabled={!this.state.programExist} id=\"claimingType\" value={this.state.race.claimingType} options={claimingTypes} onChange={this.onHandleChange} />\r\n          </div>\r\n\r\n          <div className=\"col-md-3 mb-3\">\r\n            <label htmlFor=\"procedences\">procedences</label>\r\n            <div className=\"p-col-12\">\r\n              <label htmlFor=\"nativos\" className=\"p-checkbox-label\">Nativos</label>\r\n              <Checkbox disabled={!this.state.programExist} inputId=\"nativos\" value=\"Nativos\" onChange={this.onProcedencesChange} checked={this.state.race.procedences.includes(\"Nativos\")} />\r\n            </div>\r\n            <div className=\"p-col-12\">\r\n              <label htmlFor=\"importados\" className=\"p-checkbox-label\">Importados</label>\r\n              <Checkbox disabled={!this.state.programExist} inputId=\"importados\" value=\"Importados\" onChange={this.onProcedencesChange} checked={this.state.race.procedences.includes(\"Importados\")} />\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-md-3 mb-3\">\r\n            <label htmlFor=\"horseAge\">Age</label>\r\n            <Dropdown disabled={!this.state.programExist} id=\"claimingType\" value={this.state.race.horseAge} options={ages} onChange={this.onHandleChange} />\r\n          </div>\r\n\r\n          <div className=\"col-md-3 mb-3\">\r\n            <label htmlFor=\"spec\">Specifications</label>\r\n            <input disabled={!this.state.programExist} type=\"text\" className=\"form-control\" onChange={this.onHandleChange} id=\"spec\" value={this.state.race.spec} />\r\n          </div>\r\n\r\n          <div className=\"col-md-3 mb-3\">\r\n            <label htmlFor=\"purse\">Purse</label>\r\n            <InputText disabled={!this.state.programExist} keyfilter=\"pint\" className=\"form-control\" value={this.state.race.purse} onChange={this.onNumberChangeHandler} id=\"purse\" />\r\n          </div>\r\n        </form>\r\n\r\n        <button className=\"btn btn-secondary\">\r\n          Cancel\r\n        </button>\r\n        <button onClick={this.saveHandler} className=\"btn btn-primary\">\r\n          Save\r\n        </button>\r\n\r\n        <Dialog header=\"Not exists!\" visible={this.state.programNotExist} style={{ width: '50vw' }} modal={true} onHide={this.notExistHandler}>\r\n          Program {this.state.race.prorgramId} does not exist!\r\n        </Dialog>\r\n\r\n        <Dialog header={this.state.race.event + \" Created!\"} visible={this.state.created} style={{ width: '50vw' }} modal={true} onHide={this.modalCancelHandler}>\r\n          <div>\r\n            <div>\r\n              Event: {this.state.race.event}\r\n            </div>\r\n            <div>\r\n              Distance: {this.state.race.distance}\r\n            </div>\r\n            <div>\r\n              Procedence: {this.state.race.procedences.toString()}\r\n            </div>\r\n            <div>\r\n              Age: {this.state.race.horseAge}\r\n            </div>\r\n            <div>\r\n              Claiming: {this.state.race.claimingPrice} {this.state.race.claimingType}\r\n            </div>\r\n            <div>\r\n              Event: {this.state.race.event}\r\n            </div>\r\n          </div>\r\n        </Dialog>\r\n\r\n        {\r\n          this.state.isLoading && <Spinner />\r\n        }\r\n      </React.Fragment >\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateRacePage\r\n"]},"metadata":{},"sourceType":"module"}